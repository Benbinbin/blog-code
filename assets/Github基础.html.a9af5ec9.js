import{o as l,c as e,F as n,a as t,b as r}from"./app.93fa4a4f.js";const o={},u=t("h1",{id:"github基础",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#github基础","aria-hidden":"true"},"#"),r(" Github基础")],-1),i=t("p",null,"参考：",-1),a=t("ul",null,[t("li",null,"http://up-for-grabs.net/"),t("li",null,"http://www.firsttimersonly.com/"),t("li",null,[t("a",{href:"https://github.com/search?utf8=%E2%9C%93&q=label%3Afirst-timers-only+is%3Aopen&type=Issues&ref=searchresults",target:"_blank",rel:"noopener noreferrer"},"GitHub 上的（仅）初学者标签")]),t("li",null,[t("a",{href:"https://medium.com/@kentcdodds/first-timers-only-78281ea47455",target:"_blank",rel:"noopener noreferrer"},"「仅初学者」博文")]),t("li",null,[t("a",{href:"http://gitbook.liuhui998.com/index.html",target:"_blank",rel:"noopener noreferrer"},"Git Community Book 中译版")]),t("li",null,[t("a",{href:"https://github.com/git-tips/tips",target:"_blank",rel:"noopener noreferrer"},"git-tips"),r("（"),t("a",{href:"https://github.com/521xueweihan/git-tips",target:"_blank",rel:"noopener noreferrer"},"中译版"),r("）")]),t("li",null,[r("查看开发者的"),t("a",{href:"http://firstpr.me/",target:"_blank",rel:"noopener noreferrer"},"第一个 Pull Request")])],-1),s=t("p",null,[r("托管 Git 项目的方式有多种，目前最受欢迎的托管网站是 "),t("a",{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"},"GitHub")],-1),c=t("h2",{id:"访问远程仓库",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#访问远程仓库","aria-hidden":"true"},"#"),r(" 访问远程仓库")],-1),d=t("p",null,[r("通过位于 Web 上的"),t("strong",null,"仓库的 URL"),r(" 和 Git 远程命令 "),t("code",null,"git remote"),r(" 访问远程仓库并进行交互。")],-1),g=t("p",null,[t("strong",null,"远程仓库的简写名 Shortname"),r(" 将远程仓库克隆到本地后，该仓库会（通过 URL）与远程仓库绑定，运行命令 "),t("code",null,"git remote"),r(" 会返回远程仓库的简写名（通常命名为 "),t("code",null,"origin"),r("）。简写名是"),t("strong",null,"远程仓库路径"),r("的简略表示。简写名仅局部用于当前仓库（如在你的本地仓库中）。")],-1),h=t("p",null,[r("示例 "),t("img",{src:"/blog-code/assets/20191126224140485_9392.a4d99b69.png",alt:"远程仓库简写名与路径"})],-1),m=t("ul",null,[t("li",null,[r("命令 "),t("code",null,"git remote"),r(" 设置选项 "),t("code",null,"-v"),r(" 返回远程仓库的简写名及其所指的完整路径（即 URL）")]),t("li",null,[r("使用命令 "),t("code",null,"git remote rename <origin_name> <new_name>"),r(" 重命名远程仓库简写名")])],-1),p=t("h2",{id:"创建远程仓库",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#创建远程仓库","aria-hidden":"true"},"#"),r(" 创建远程仓库")],-1),b=t("p",null,[r("从主页创建仓库可下拉导航栏标签创建或点击页面的 "),t("code",null,"New"),r(" 按钮")],-1),f=t("p",null,[t("img",{src:"/blog-code/assets/20191126224204894_23714.e8feb804.png",alt:"创建仓库-1"})],-1),k=t("p",null,"在创建仓库设置仓库名称 Repository name 等相关信息。一般使用项目名称作为仓库的名称。",-1),_=t("p",null,[t("img",{src:"/blog-code/assets/20191126224417421_27727.aa516b89.png",alt:"创建仓库-2"})],-1),G=t("p",null,[r("⚠️ 当本地等待 "),t("code",null,"push"),r(" 的仓库已经有了 README 文件时，创建仓库时应取消勾选 "),t("code",null,"Initialize this repository with the README"),r("（使用 README 初始化此仓库）选项")],-1),R=t("p",null,[r("当新建仓库未初始化，显示出仓库的设置页面 "),t("code",null,"Quick setup"),r("，根据本地仓库情况和提示进行操作")],-1),w=t("p",null,[t("img",{src:"/blog-code/assets/20191126224444372_3992.82cc554b.png",alt:"创建仓库-3"})],-1),x=t("ul",null,[t("li",null,[r("命令 "),t("code",null,"git remote add origin <URL>"),r(" 创建了一个简写名 "),t("code",null,"origin"),r(" （也可以设置为其他名称），并指向远程仓库完整路径（一般是 Web 上的远程仓库 URL）。添加远程仓库的路径，以在本地仓库与远程仓库之间建立连接。")]),t("li",null,[r("使用命令 "),t("code",null,"git remote -v"),r(" 查看远程仓库与本地仓库之间连接信息")])],-1),H=t("h2",{id:"推送更改至远程仓库",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#推送更改至远程仓库","aria-hidden":"true"},"#"),r(" 推送更改至远程仓库")],-1),S=t("p",null,[r("命令 "),t("code",null,"git push <remote-shortname> <branch>"),r(" 将本地 commit 推送到远程仓库，要提供"),t("strong",null,"远程仓库简写名"),r("以及用于容纳该 commit 的远程仓库的"),t("strong",null,"分支名"),r("。")],-1),q=t("p",null,[r("将当前本地仓库推送到简写名为 "),t("code",null,"origin"),r(" 的远程仓库的 "),t("code",null,"master"),r(" 分支")],-1),y=t("p",null,[t("img",{src:"/blog-code/assets/20191126224503586_27347.8d3e6045.png",alt:"推送到远程仓库"})],-1),P=t("ul",null,[t("li",null,[r("将本地 commit 推送到远程仓库可能需要输入用户名和密码，这取决于你如何配置 GitHub 的以及使用的远程 URL 。 "),t("ul",null,[t("li",null,"如果配置 GitHub 使用 HTTP 协议，就需要提供用户名和密码。如果你的密码出错，不用担心，它会让你重新输入"),t("li",null,[r("如果配置 GitHub 使用 SSH 协议，并提供过 SSH 密匙，则不需要提供密码。参阅 GitHub 文档 "),t("a",{href:"https://help.github.com/articles/connecting-to-github-with-ssh/",target:"_blank",rel:"noopener noreferrer"},"使用 SSH 连接"),r("。")])])]),t("li",null,"Git 会压缩文件使之变小，然后将其推送至远程仓库"),t("li",null,[r("示例输出表示创建了一个新分支 "),t("code",null,"[new branch]"),r("，后面是表示本地分支推送到远程仓库的分支 "),t("code",null,"master -> master")])],-1),D=t("p",null,[r("⚠️ 远程仓库的 URL 包含项目所在帐户的用户名，而该用户名为仓库的所有者，提交 "),t("code",null,"push"),r(" 到该仓库需要提供该用户名和相应密码才有权限对远程仓库进行修改")],-1),E=t("p",null,[t("img",{src:"/blog-code/assets/20191126224528394_5005.50e8054c.png",alt:"推送到远程仓库-2"})],-1),L=t("p",null,[t("img",{src:"/blog-code/assets/20191126224544533_3339.87ece41b.png",alt:"跟踪分支"})],-1),U=t("p",null,[r("当把本地 commit 推送到远程仓库后，会出现跟踪分支（其名称由远程仓库的简写名及分支名称组成），以跟踪（同步）远程仓库中的相应分支。示例中的跟踪分支表示当前远程仓库 "),t("code",null,"origin"),r(" 有一个 "),t("code",null,"master"),r(" 分支指向 commit "),t("code",null,"d2227cc"),r("（"),t("strong",null,[r("并包含 "),t("code",null,"d2227cc"),r(" 前的所有 commit "),t("strong",null,"），这意味着可以在本地仓库跟踪远程仓库的信息。但需要注意的一点是，这个跟踪分支并"),r("不能实时表现")]),r("在远程仓库上的位置。如果我们之外的其他人对远程仓库做了更改，我们本地仓库中的跟踪分支不会移动，必须告诉它检查更新/同步"),t("strong",null,"它才会"),r("移动。")],-1),j=t("h2",{id:"查看远程仓库",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#查看远程仓库","aria-hidden":"true"},"#"),r(" 查看远程仓库")],-1),A=t("p",null,[r("推送 commit 至远程仓库后，Github 会在项目主页显示关于仓库的信息可供查阅。GitHub 有一个很棒的功能，即它会"),t("strong",null,"自动显示 README 文件的内容"),r("。")],-1),W=t("p",null,[t("img",{src:"/blog-code/assets/20191126224601721_7357.bd033175.png",alt:"Github 项目主页"})],-1),v=t("p",null,"该示例中的 GitHub 显示当前仓库中有一个个 commit、一个分支、一名贡献者",-1),I=t("h2",{id:"从远处仓库拉取修改",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#从远处仓库拉取修改","aria-hidden":"true"},"#"),r(" 从远处仓库拉取修改")],-1),M=t("p",null,[r("当远程仓库上存在一些 commit ，但我们的本地仓库上没有这些 commit ，为了将与远程仓库上的更改同步，需要使用命令 "),t("code",null,"git pull <remote-shortname> <branch>"),r(" 同步"),t("strong",null,"远程"),r("仓库与"),t("strong",null,"本地"),r("仓库，与命令 "),t("code",null,"git push"),r(" 类似，但是方向相反，拉取远程仓库的 commit 到本地并与本地分支合并。")],-1),B=t("p",null,"检索 origin 远程仓库 master 分支中的 commit 并将。",-1),C=t("p",null,[t("img",{src:"/blog-code/assets/20191126224628521_13204.5aacee96.png",alt:"从远程仓库拉取修改"})],-1),N=t("ul",null,[t("li",null,"远程分支上的 commit 会被复制到本地仓库"),t("li",null,[r("本地跟踪分支 "),t("code",null,"origin/master"),r(" 移到指向最新的 commit")]),t("li",null,[r("本地跟踪分支 "),t("code",null,"origin/master"),r(" 合并到本地分支 master")]),t("li",null,[r("输出 "),t("code",null,"fast-forward"),r(" 表示 Git 进行了"),t("strong",null,"快进合并"),r("，并输出类似于 "),t("code",null,"git --stat"),r(" 的信息，显示更改的文件及添加或删除了多少行")])],-1),Q=t("p",null,[r("命令 "),t("code",null,"git fetch <remote-shortname> <branch>"),r(" 也可以从远程仓库分支检索 commit 并下载到本地，但"),t("strong",null,"不会"),r("自动将本地分支与远程跟踪分支"),t("strong",null,"合并"),r("。只是将跟踪分支指向最新的 commit，而当前分支并不移动。使用 "),t("code",null,"git fetch"),r(" 而不是 "),t("code",null,"git pull"),r(" 的一个主要情形是当你的远程分支和本地分支都拥有对方所没有的更改时，直接合并会出现合并冲突。可以将 "),t("code",null,"git fetch"),r(" 想象成 "),t("code",null,"git pull"),r(" 它的一半操作，先获取远程更改，将它们存储到本地分支中，然后再使用命令 "),t("code",null,"git merge <branch>"),r("手动执行合并。")],-1),T=t("p",null,[r("🎦 "),t("a",{href:"https://www.jianguoyun.com/p/DajSvLgQjNDGBxjS-uAD",target:"_blank",rel:"noopener noreferrer"},"git fetch 演示视频")],-1),z=t("h2",{id:"fork-仓库",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fork-仓库","aria-hidden":"true"},"#"),r(" fork 仓库")],-1),F=t("p",null,"在版本控制术语中，fork 一个仓库是指复制它。当你 fork 仓库时会创建与原始仓库完全相同的副本，新副本也是一个远程仓库，并将该副本移动到你的帐户，你对 fork 的仓库拥有完全控制权（与之相对应的是克隆，克隆仓库发生在本地计算机上，将远程仓库复制到本地，获得完全一样的仓库副本）。",-1),J=t("p",null,"fork 项目后你的 GitHub 配置文件名称旁边会显示新的项目名称。此外，名称下面还会说明原始项目所在的位置。可以 fork GitHub 上的任何公共仓库，并对获得的副本拥有完全控制权。",-1),K=t("p",null,[t("img",{src:"/blog-code/assets/20191126232329897_21199.48a46e0c.png",alt:"fork 仓库"})],-1),O=t("ul",null,[t("li",null,"fork 并非 Git 子命令"),t("li",null,"修改 fork 的仓库不会更改原始仓库")],-1),V=t("h2",{id:"查看其他开发者的-commit",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#查看其他开发者的-commit","aria-hidden":"true"},"#"),r(" 查看其他开发者的 commit")],-1),X=t("p",null,[r("在与他人开发者协作时，使用命令 "),t("code",null,"git shortlog"),r(" 按作者对 commit 分组排序列出所有提交。还可以设置选项 "),t("code",null,"-s"),r(" 仅显示 commit 的数量，设置选项 "),t("code",null,"-n"),r(" 按数量排序（而不是按作者姓名的字母顺序）。")],-1),Y=t("p",null,[t("img",{src:"/blog-code/assets/20191127104911079_15340.1e3eedf0.png",alt:"git shortlog 按开发者分组列出提交"})],-1),Z=t("p",null,[t("img",{src:"/blog-code/assets/20191127105946592_26130.83c89f68.png",alt:"git shortlog 按提交数量排序"})],-1),$=t("p",null,[r("命令 "),t("code",null,"git log"),r(" 设置不同的选项可按不同需求查询 commit")],-1),ll=t("ul",null,[t("li",null,[r("设置选项 "),t("code",null,"--author=name"),r(" 筛选作者名称与 "),t("code",null,"name"),r(" 相匹配所有的 commit")]),t("li",null,[r("设置选项 "),t("code",null,"--grep key_word"),r(" 或 "),t("code",null,"--grep=key_word"),r(" 筛选提交信息与关键字 "),t("code",null,"key_word"),r(" 相匹配的所有 commit（💡Grep 是一个模式匹配工具💡，如运行 "),t("code",null,'git log --grep "fort"'),r(" 则 Git 将显示顺序包含字符 "),t("code",null,"f"),r("、"),t("code",null,"o"),r("、"),t("code",null,"r"),r("、"),t("code",null,"t"),r(" 的 commit，可能是一个单词，也可能是单词里的一个片段相匹配即可 ）")])],-1),el=t("p",null,[r("⚠️ 空格是查询时的一个问题，如果尝试搜索包含多个词且单词之间有空格的作者或内容，则需要将空格也包含在引号内。例如，要搜索 "),t("code",null,"unit tests"),r("，你需要使用以下命令 "),t("code",null,'git log --grep="unit tests"')],-1),nl=t("h2",{id:"拉取请求pull-request",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#拉取请求pull-request","aria-hidden":"true"},"#"),r(" 拉取请求Pull Request")],-1),tl=t("p",null,"拉取请求 Pull Request 是向初始或源仓库的维护者发出的请求，以让其将你在他们项目的 fork 上所做的更改应用在他们的项目中。你请求他们拉取你做的更改。",-1),rl=t("p",null,"要创建 Pull Request，你需要完成一些操作：",-1),ol=t("ul",null,[t("li",null,"你必须 fork 源仓库"),t("li",null,"将你的 fork 克隆到你的计算机"),t("li",null,"进行一些 commit（最好是在特性分支上！）"),t("li",null,"将 commit 推送回你的 fork"),t("li",null,"创建一个新的 Pull Request，并选择包含你的新 commit 的分支。")],-1),ul=t("p",null,[r("🎦 "),t("a",{href:"https://www.jianguoyun.com/p/DSSbTUkQjNDGBxjP-uAD",target:"_blank",rel:"noopener noreferrer"},"创建 Pull Request")],-1),il=t("ul",null,[t("li",null,"当创建一个 Pull Request 时，要将所有更改放在一个专用于这些更改的特性分支上"),t("li",null,"查看 GitHub 中的 Conversation 对话选项卡，可以与项目维护者进行沟通，以明确他们希望你做什么"),t("li",null,[r("如果需要更改 Pull Request 一般按照以下步骤 "),t("ul",null,[t("li",null,"在你的 Pull Request 所基于的本地仓库的同一分支上添加一些必要 commit"),t("li",null,"将该分支推送到你的源仓库 fork 副本")])])],-1),al=t("h2",{id:"与源项目保持同步",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#与源项目保持同步","aria-hidden":"true"},"#"),r(" 与源项目保持同步")],-1),sl=t("h3",{id:"star",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#star","aria-hidden":"true"},"#"),r(" Star")],-1),cl=t("p",null,"在仓库主页点击 Star 按钮可收藏该项目，Star 是能帮助你跟踪感兴趣仓库的一个有用功能，同时也成为了衡量仓库受欢迎程度的手段。但是如果想实时跟进仓库的发展就不行了，你得手动前往收藏页面查看仓库，以检查它们是否发生变化。",-1),dl=t("h3",{id:"watch",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#watch","aria-hidden":"true"},"#"),r(" Watch")],-1),gl=t("p",null,"如果你要跟进一个项目的变化，并希望接收变更通知，GitHub 为你提供了 Watch 按钮以关注该仓库。这样当该仓库发生任何活动时，GitHub 都会通知你，例如当有人向仓库推送变更，创建了新的 Issues，或者在现有 Issues 中添加了评论。",-1),hl=t("p",null,[t("img",{src:"/blog-code/assets/20191127123954887_18541.7ca43b0c.png",alt:"Watching 仓库"})],-1),ml=t("h2",{id:"加入源仓库更改",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#加入源仓库更改","aria-hidden":"true"},"#"),r(" 加入源仓库更改")],-1),pl=t("p",null,[r("假使源仓库开始对项目进行更改了（而 fork 中不会获得这些更改），为了本地克隆仓库保持同步，需要将源仓库的项目添加为额外远程仓库以便保持同步。使用命令 "),t("code",null,"git remote add"),r(" 命令向本地仓库添加一个新的简写名（一般使用 "),t("code",null,"upstream"),r(" 表示引用源仓库）和 URL，将与源仓库之间建立连接。")],-1),bl=t("p",null,[t("img",{src:"/blog-code/assets/20191127153247953_17635.eb1378a9.png",alt:"添加引用源仓库链接"})],-1),fl=t("p",null,[r("接着使用命令 "),t("code",null,"git pull <remote-shortname> <branch>"),r(" 或 "),t("strong",null,[t("code",null,"git fetch <remote-shortname> <branch>"),r("（推荐使用）")]),r(" 获得上游远程仓库的更改，注意简写名应使用引用源仓库的简写名")],-1),kl=t("p",null,[t("img",{src:"/blog-code/assets/20191127153345048_3410.d98d74dd.png",alt:"拉取上游变更-1"}),r(" 从上游远程仓库获取了所有更改，并存放于本地仓库的新分支 "),t("code",null,"upstream/master"),r("之中")],-1),_l=t("p",null,[t("img",{src:"/blog-code/assets/20191127153405969_25196.dde2a54b.png",alt:"拉取上游变更-2"})],-1),Gl=t("p",null,[r("本地仓库中多出了 "),t("code",null,"upstream/master"),r(" 跟踪分支，该分支跟踪"),t("strong",null,"源仓库"),r(" master 分支的位置，即获取对源仓库的master 分支所做的更改")],-1),Rl=t("p",null,[r("一般需要将源仓库的更新合并到本地分支默认分支，以便在默认分支上的开发环境是与源仓库同步的，使用命令 "),t("code",null,"git merge <branch_name>"),r("。同样为了保持 fork 仓库也进行同步，最后把本地整合了最新更新的分支 push 到远程仓库")],-1),wl=t("p",null,[t("img",{src:"/blog-code/assets/20191127154519620_1244.c2e2595e.png",alt:"拉取上游更新-3"})],-1);o.render=function(t,r){return l(),e(n,null,[u,i,a,s,c,d,g,h,m,p,b,f,k,_,G,R,w,x,H,S,q,y,P,D,E,L,U,j,A,W,v,I,M,B,C,N,Q,T,z,F,J,K,O,V,X,Y,Z,$,ll,el,nl,tl,rl,ol,ul,il,al,sl,cl,dl,gl,hl,ml,pl,bl,fl,kl,_l,Gl,Rl,wl],64)};export default o;
