import{o as l,c as e,F as n,a,b as o}from"./app.93fa4a4f.js";const u={},s=a("h1",{id:"docker-基本命令",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#docker-基本命令","aria-hidden":"true"},"#"),o(" Docker 基本命令")],-1),c=a("p",null,[o("可以通过 "),a("code",null,"--help"),o(" 参数来查看 Docker 创建命令")],-1),r=a("ul",null,[a("li",null,[a("code",null,"docker --help")]),a("li",null,[a("code",null,"docker container --help"),o(" 容器相关的命令")]),a("li",null,[a("code",null,"docker images --help")])],-1),d=a("h2",{id:"创建容器",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#创建容器","aria-hidden":"true"},"#"),o(" 创建容器")],-1),i=a("div",{class:"language-bash ext-sh line-numbers-mode"},[a("pre",{class:"language-bash"},[a("code",null,[o("docker run "),a("span",{class:"token operator"},"<"),o("ImageName"),a("span",{class:"token operator"},">"),o("\n")])]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br")])],-1),t=a("p",null,[o("💡 以上命令会运行镜像 "),a("code",null,"ImageName"),o(" 并创建一个"),a("strong",null,"新容器"),o("，如果容器中的命令执行完成就会退出容器。推荐预先将镜像下载到本地，以加速创建运行过程。")],-1),p=a("ul",null,[a("li",null,[o("可以使用参数 "),a("code",null,"--name ContainerName"),o(" 指定创建的容器的名称")]),a("li",null,[o("可以使用参数 "),a("code",null,"--rm"),o(" 设置容器退出后自动删除")])],-1),k=a("h2",{id:"管理容器",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#管理容器","aria-hidden":"true"},"#"),o(" 管理容器")],-1),m=a("ul",null,[a("li",null,[a("p",null,[a("code",null,"docker ps"),o(" 列出所有正在运行的容器，使用参数 "),a("code",null,"-a"),o(" 可以查看所有容器（包括运行过的和正在运行的容器）")]),a("div",{class:"language-bash ext-sh line-numbers-mode"},[a("pre",{class:"language-bash"},[a("code",null,[o("CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS                     PORTS     NAMES\n36f547c36763   php       "),a("span",{class:"token string"},'"docker-php-entrypoi…"'),o("   "),a("span",{class:"token number"},"4"),o(" minutes ago   Exited "),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},")"),o(),a("span",{class:"token number"},"4"),o(" minutes ago             php1\n7f6293711fb0   php       "),a("span",{class:"token string"},'"docker-php-entrypoi…"'),o("   "),a("span",{class:"token number"},"5"),o(" minutes ago   Exited "),a("span",{class:"token punctuation"},"("),a("span",{class:"token number"},"0"),a("span",{class:"token punctuation"},")"),o(),a("span",{class:"token number"},"4"),o(" minutes ago             focused_haslett\n")])]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br")])]),a("p",null,[o("其中 "),a("code",null,"CONTAINER ID"),o(" 是容器的 ID 值，可以用在其他命令中指明要操作的具体容器，如果创建容器时没有使用参数 "),a("code",null,"--name"),o(" 指定容器名称，Docker 会自动生成 "),a("code",null,"NAMES"),o(" 属性")])]),a("li",null,[a("p",null,[a("code",null,"docker start <CONTAINER ID>"),o(" 启动已有的容器")])]),a("li",null,[a("p",null,[a("code",null,"docker stop <CONTAINER ID>"),o(" 停止正在运行的容器")])]),a("li",null,[a("p",null,[a("code",null,"docker rm <CONTAINER ID>"),o(" 删除指定的容器，如果需要删除正在运行的容器，需要添加参数 "),a("code",null,"-f")])]),a("li",null,[a("p",null,[a("code",null,"docker container prune"),o(" 删除所有已停止的容器")])]),a("li",null,[a("p",null,[a("code",null,"docker rename"),o(" 重命名容器")])]),a("li",null,[a("p",null,[a("code",null,"docker cp"),o(" 复制容器")])]),a("li",null,[a("p",null,[a("code",null,"docker exec"),o(" 运行命令，运行结束后就退出")])]),a("li",null,[a("p",null,[a("code",null,"docker commit <CONTAINER ID>"),o(" 从容器创建新镜像（容器在命令运行结束后会退出，为了持久化，可以基于容器创建一个新镜像），然后终端会返回一个该镜像的 ID。推荐给镜像命名并打上标签，便于识别")]),a("div",{class:"language-bash ext-sh line-numbers-mode"},[a("pre",{class:"language-bash"},[a("code",null,[o("docker tag "),a("span",{class:"token operator"},"<"),o("ImageID"),a("span",{class:"token operator"},">"),o(),a("span",{class:"token operator"},"<"),o("ImageName"),a("span",{class:"token operator"},">"),o(":"),a("span",{class:"token operator"},"<"),o("TagName"),a("span",{class:"token operator"},">"),o("\n")])]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br")])])]),a("li",null,[a("p",null,[a("code",null,"docker build"),o(" 读取 "),a("code",null,"dockerfile"),o(" 创建一个新镜像")])])],-1),h=a("p",null,"💡 参考 Linux 系统常见操作命令",-1),b=a("h2",{id:"镜像管理",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#镜像管理","aria-hidden":"true"},"#"),o(" 镜像管理")],-1),g=a("ul",null,[a("li",null,[a("code",null,"docker images"),o(" 镜像列表")]),a("li",null,[a("code",null,"docker rmi"),o(" 镜像删除")]),a("li",null,[a("code",null,"docker image prune"),o(" 删除停止的镜像，如果添加参数 "),a("code",null,"-a"),o(" 会删除所有未被其他镜像引用过的镜像")]),a("li",null,[a("code",null,"docker save"),o(" 将镜像保存为压缩文件格式")]),a("li",null,[a("code",null,"docker load"),o(" 从压缩文件中提取出镜像")]),a("li",null,[a("code",null,"docker pull"),o(" 从 Registry 中拉取镜像到本地，可以从官方提供的仓库 "),a("a",{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"},"dockerhub"),o(" 中检索所需的镜像")]),a("li",null,[a("code",null,"docker push"),o(" 从本地将镜像推送到 Registry")]),a("li",null,[a("code",null,"docker tag"),o(" 为镜像打标签（一般用于标记版本）")])],-1),v=a("h2",{id:"查看信息和状态",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#查看信息和状态","aria-hidden":"true"},"#"),o(" 查看信息和状态")],-1),I=a("ul",null,[a("li",null,[a("code",null,"docker logs <ContainerID>"),o(" 查看 docker 日志")]),a("li",null,[a("code",null,"docker stats"),o(" 查看 docker 状态")]),a("li",null,[a("code",null,"docker version"),o(" 查看 docker 版本")]),a("li",null,[a("code",null,"docker top"),o(" 查看 docker 当前运行的进程")]),a("li",null,[a("code",null,"docker inspect <ContainerID>"),o(" 查看 docker 元数据")]),a("li",null,[a("code",null,"docker diff <ContainerID>"),o(" 查看容器中修改的内容")]),a("li",null,[a("code",null,"docker port <ContainerID>"),o(" 查看容器的端口映射")])],-1),f=a("h2",{id:"数据卷管理",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#数据卷管理","aria-hidden":"true"},"#"),o(" 数据卷管理")],-1),N=a("p",null,[o("为了将容器数据持久化，数据卷支持将容器保存到文件系统中，或是从文件系统/内存中读取容器。这样也就实现了"),a("strong",null,"宿主机（本地）数据与容器的数据的实时共享"),o("，如果将同一数据卷挂载到多个容器中，就可以实现多个容器的数据共享。")],-1),D=a("p",null,[a("img",{src:"/blog-code/assets/volume.5c612f0f.png",alt:"volume"})],-1),x=a("ul",null,[a("li",null,[a("code",null,"docker volume create <volumeName>"),o(" 创建数据卷")]),a("li",null,[a("code",null,"docker volume ls"),o(" 列出所有数据卷")]),a("li",null,[a("code",null,"docker volume inspect"),o(" 查看数据卷的元信息")]),a("li",null,[a("code",null,"docker volume rm"),o(" 删除数据卷")])],-1),C=a("p",null,[o("数据卷是创建在宿主机中的，需要在运行 Docker 时将他它映射到容器的相应目录，以下命令创建一个名为 "),a("code",null,"myvol2"),o(" 的数据卷，使用参数 "),a("code",null,"-v"),o(" 指定目录对应关系。")],-1),E=a("div",{class:"language-bash ext-sh line-numbers-mode"},[a("pre",{class:"language-bash"},[a("code",null,"docker run -d --name devtest -v myvol2:/app nginx:latest\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br")])],-1),A=a("p",null,[a("img",{src:"/blog-code/assets/volume-2.710d8c7e.png",alt:"volume-2"})],-1);u.render=function(a,o){return l(),e(n,null,[s,c,r,d,i,t,p,k,m,h,b,g,v,I,f,N,D,x,C,E,A],64)};export default u;
