import{d as e}from"./app.93fa4a4f.js";const n={},a=e('<h1 id="docker-常用镜像" tabindex="-1"><a class="header-anchor" href="#docker-常用镜像" aria-hidden="true">#</a> Docker 常用镜像</h1><h2 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h2><p>一个 Web Server 可以长期运行在后台，提供 Http 服务。更多配置可以查看<a href="https://hub.docker.com/_/nginx" target="_blank" rel="noopener noreferrer">镜像说明文档</a>。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>docker run -v F:<span class="token punctuation">\\</span>Code<span class="token punctuation">\\</span>docker<span class="token punctuation">\\</span>demo:/usr/share/nginx/html:ro -p <span class="token number">8080</span>:80 --rm -d nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>需要使用 <code>-p</code> 参数将宿主机的端口 <code>8080</code> 映射到容器的端口 <code>80</code>，便于直接在宿主机的浏览器中访问网页</li><li>需要使用 <code>-v</code> 参数通过数据卷将宿主机的目录映射到容器的目录，便于直接在宿主机的目录中进行开发</li><li>参数 <code>--rm</code> 设置容器退出后自动删除以节省磁盘容量</li><li>可以设置参数 <code>-d</code> 以后台模式开启服务，这样即使终端关闭服务器依然可以继续使用。运行命令后，终端返回容器的 ID。如果希望停止该容器，可以使用 <code>docker stop &lt;ContainerID&gt;</code> 命令</li></ul>',5);n.render=function(e,n){return a};export default n;
