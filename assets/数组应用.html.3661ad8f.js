import{o as n,c as s,F as a,a as t,b as e}from"./app.93fa4a4f.js";const o={},c=t("h1",{id:"数组应用",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#数组应用","aria-hidden":"true"},"#"),e(" 数组应用")],-1),p=t("h2",{id:"两数求和问题",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#两数求和问题","aria-hidden":"true"},"#"),e(" 两数求和问题")],-1),l=t("blockquote",null,[t("p",null,[e("真题描述： 给定一个整数数组 "),t("code",null,"nums"),e(" 和一个目标值"),t("code",null," target"),e("，请你在该数组中找出"),t("strong",null,"和为目标值的那 两个 整数"),e("，并返回他们的数组下标。假设每种输入只会对应一个答案，而且不能重复利用这个数组中同样的元素。")]),t("p",null,[e("示例：给定 "),t("code",null,"nums = [2, 7, 11, 15], target = 9"),e(" 因为 "),t("code",null,"nums[0] + nums[1] = 2 + 7 = 9"),e(" 所以返回 "),t("code",null,"[0, 1]")])],-1),u=t("ul",null,[t("li",null,[e("解法一：使用循环迭代数组，计算「当前数」与其后方各数的和，直到和为 "),t("code",null,"target")])],-1),r=t("div",{class:"language-javascript ext-js line-numbers-mode"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token keyword"},"function"),e(),t("span",{class:"token function"},"twoSum"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},[e("nums"),t("span",{class:"token punctuation"},","),e(" target")]),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token keyword"},"let"),e(" len "),t("span",{class:"token operator"},"="),e(" nums"),t("span",{class:"token punctuation"},"."),e("length"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token keyword"},"for"),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),e(" i"),t("span",{class:"token operator"},"="),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},";"),e(" i"),t("span",{class:"token operator"},"<"),e("len"),t("span",{class:"token punctuation"},";"),e(" i"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n        "),t("span",{class:"token keyword"},"for"),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),e(" j "),t("span",{class:"token operator"},"="),e(" i"),t("span",{class:"token operator"},"+"),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),e(" j "),t("span",{class:"token operator"},"<"),e(" len"),t("span",{class:"token punctuation"},";"),e(" j"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n            "),t("span",{class:"token keyword"},"if"),t("span",{class:"token punctuation"},"("),e("nums"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token operator"},"+"),e("num"),t("span",{class:"token punctuation"},"["),e("j"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"==="),e(" target"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n                "),t("span",{class:"token keyword"},"return"),e(),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},","),e(" j"),t("span",{class:"token punctuation"},"]"),e("\n            "),t("span",{class:"token punctuation"},"}"),e("\n        "),t("span",{class:"token punctuation"},"}"),e("\n    "),t("span",{class:"token punctuation"},"}"),e("\n"),t("span",{class:"token punctuation"},"}"),e("\n")])]),t("div",{class:"line-numbers"},[t("span",{class:"line-number"},"1"),t("br"),t("span",{class:"line-number"},"2"),t("br"),t("span",{class:"line-number"},"3"),t("br"),t("span",{class:"line-number"},"4"),t("br"),t("span",{class:"line-number"},"5"),t("br"),t("span",{class:"line-number"},"6"),t("br"),t("span",{class:"line-number"},"7"),t("br"),t("span",{class:"line-number"},"8"),t("br"),t("span",{class:"line-number"},"9"),t("br"),t("span",{class:"line-number"},"10"),t("br")])],-1),k=t("p",null,[e("💡 两层循环很多情况下都意味着 O(n^2) 的复杂度，考虑能不能"),t("strong",null,"用空间换时间，把它优化成一层循环"),e("。")],-1),i=t("ul",null,[t("li",null,[e("解法二：使用"),t("strong",null,"求和问题转化为求差问题"),e("的方法优化，然后增加一个"),t("strong",null,"映射 Map 来记录已经遍历过的数字及其对应的索引值"),e("。这样就可以"),t("strong",null,"利用一次循环迭代"),e("，在 Map 里去查询寻找 "),t("code",null,"target"),e(" 与当前遍历数的差值是否已经在前面的数字中"),t("strong",null,"出现过"),e("了，而不需要重复遍历。")])],-1),m=t("div",{class:"language-javascript ext-js line-numbers-mode"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token doc-comment comment"},[e("/**\n* "),t("span",{class:"token keyword"},"@param"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"}")]),e(),t("span",{class:"token parameter"},"nums"),e("\n* "),t("span",{class:"token keyword"},"@param"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"}")]),e(),t("span",{class:"token parameter"},"target"),e("\n* "),t("span",{class:"token keyword"},"@return"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"}")]),e("\n*/")]),e("\n\n"),t("span",{class:"token comment"},"// 使用对象模拟 Map"),e("\n"),t("span",{class:"token keyword"},"const"),e("  "),t("span",{class:"token function-variable function"},"twoSum"),e(),t("span",{class:"token operator"},"="),e(),t("span",{class:"token keyword"},"function"),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},[e("nums"),t("span",{class:"token punctuation"},","),e(" target")]),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token comment"},"// 「缓存」数据的对象"),e("\n    "),t("span",{class:"token keyword"},"let"),e(" diffs "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token punctuation"},"{"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token keyword"},"const"),e(" len "),t("span",{class:"token operator"},"="),e(" nums"),t("span",{class:"token punctuation"},"."),e("length"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token keyword"},"for"),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),e(" i"),t("span",{class:"token operator"},"="),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},";"),e(" i"),t("span",{class:"token operator"},"<"),e("len"),t("span",{class:"token punctuation"},";"),e(" i"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n        "),t("span",{class:"token comment"},"// 判断 target 与当前数值的差值是否存在于对象中"),e("\n        "),t("span",{class:"token keyword"},"if"),t("span",{class:"token punctuation"},"("),e("diffs"),t("span",{class:"token punctuation"},"["),e("target "),t("span",{class:"token operator"},"-"),e(" nums"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"!=="),e(),t("span",{class:"token keyword"},"undefined"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n            "),t("span",{class:"token keyword"},"return"),e(),t("span",{class:"token punctuation"},"["),e("diffs"),t("span",{class:"token punctuation"},"["),e("target "),t("span",{class:"token operator"},"-"),e(" nums"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},","),e(" i"),t("span",{class:"token punctuation"},"]"),e("\n        "),t("span",{class:"token punctuation"},"}"),e("\n        "),t("span",{class:"token comment"},"// 若没有「缓存」则记录当前值，以值作为属性名，以索引作为属性值"),e("\n        "),t("span",{class:"token keyword"},"else"),e(),t("span",{class:"token punctuation"},"{"),e("\n            diffs"),t("span",{class:"token punctuation"},"["),e("nums"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"="),e(" i"),t("span",{class:"token punctuation"},";"),e("\n        "),t("span",{class:"token punctuation"},"}"),e("\n    "),t("span",{class:"token punctuation"},"}"),e("\n"),t("span",{class:"token punctuation"},"}"),e("\n\n"),t("span",{class:"token comment"},"// 使用 Map"),e("\n"),t("span",{class:"token keyword"},"const"),e(),t("span",{class:"token function-variable function"},"twoSum"),e(),t("span",{class:"token operator"},"="),e(),t("span",{class:"token keyword"},"function"),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},[e("nums"),t("span",{class:"token punctuation"},","),e(" target")]),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token comment"},"// Map 「缓存」数据"),e("\n    "),t("span",{class:"token keyword"},"let"),e(" diffs "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token keyword"},"new"),e(),t("span",{class:"token class-name"},"Map"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token keyword"},"const"),e(" len "),t("span",{class:"token operator"},"="),e(" nums"),t("span",{class:"token punctuation"},"."),e("length"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token keyword"},"for"),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),e(" i"),t("span",{class:"token operator"},"="),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},";"),e(" i"),t("span",{class:"token operator"},"<"),e("len"),t("span",{class:"token punctuation"},";"),e(" i"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n        "),t("span",{class:"token comment"},"// 判断差值是否在映射 Map 中"),e("\n        "),t("span",{class:"token keyword"},"if"),t("span",{class:"token punctuation"},"("),e("diffs"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"has"),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},[e("target "),t("span",{class:"token operator"},"-"),e(" nums"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]")]),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n            "),t("span",{class:"token keyword"},"return"),e(),t("span",{class:"token punctuation"},"["),e("diffs"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"get"),t("span",{class:"token punctuation"},"("),e("target "),t("span",{class:"token operator"},"-"),e(" nums"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),e(" i"),t("span",{class:"token punctuation"},"]"),e("\n        "),t("span",{class:"token punctuation"},"}"),e("\n        "),t("span",{class:"token comment"},"// 若没有「缓存」则记录当前值"),e("\n        "),t("span",{class:"token keyword"},"else"),e(),t("span",{class:"token punctuation"},"{"),e("\n            diffs"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"set"),t("span",{class:"token punctuation"},"("),e("nums"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},","),e(" i"),t("span",{class:"token punctuation"},")"),e("\n        "),t("span",{class:"token punctuation"},"}"),e("\n    "),t("span",{class:"token punctuation"},"}"),e("\n"),t("span",{class:"token punctuation"},"}"),e("\n")])]),t("div",{class:"line-numbers"},[t("span",{class:"line-number"},"1"),t("br"),t("span",{class:"line-number"},"2"),t("br"),t("span",{class:"line-number"},"3"),t("br"),t("span",{class:"line-number"},"4"),t("br"),t("span",{class:"line-number"},"5"),t("br"),t("span",{class:"line-number"},"6"),t("br"),t("span",{class:"line-number"},"7"),t("br"),t("span",{class:"line-number"},"8"),t("br"),t("span",{class:"line-number"},"9"),t("br"),t("span",{class:"line-number"},"10"),t("br"),t("span",{class:"line-number"},"11"),t("br"),t("span",{class:"line-number"},"12"),t("br"),t("span",{class:"line-number"},"13"),t("br"),t("span",{class:"line-number"},"14"),t("br"),t("span",{class:"line-number"},"15"),t("br"),t("span",{class:"line-number"},"16"),t("br"),t("span",{class:"line-number"},"17"),t("br"),t("span",{class:"line-number"},"18"),t("br"),t("span",{class:"line-number"},"19"),t("br"),t("span",{class:"line-number"},"20"),t("br"),t("span",{class:"line-number"},"21"),t("br"),t("span",{class:"line-number"},"22"),t("br"),t("span",{class:"line-number"},"23"),t("br"),t("span",{class:"line-number"},"24"),t("br"),t("span",{class:"line-number"},"25"),t("br"),t("span",{class:"line-number"},"26"),t("br"),t("span",{class:"line-number"},"27"),t("br"),t("span",{class:"line-number"},"28"),t("br"),t("span",{class:"line-number"},"29"),t("br"),t("span",{class:"line-number"},"30"),t("br"),t("span",{class:"line-number"},"31"),t("br"),t("span",{class:"line-number"},"32"),t("br"),t("span",{class:"line-number"},"33"),t("br"),t("span",{class:"line-number"},"34"),t("br"),t("span",{class:"line-number"},"35"),t("br"),t("span",{class:"line-number"},"36"),t("br"),t("span",{class:"line-number"},"37"),t("br"),t("span",{class:"line-number"},"38"),t("br"),t("span",{class:"line-number"},"39"),t("br")])],-1),b=t("p",null,[e("💡 键值对存储可以用 ES6 里的 Map 来做，也可以直接用对象字面量来定义。与一般对象最大的差别是 Map 的键 key 可以任何类型的数据，使用对象作为键是 Map 最值得注意和重要的功能之一；而对象的键只能是字符串（属性名可以是任意字符串（允许使用 "),t("code",null,"$"),e(" 和 "),t("code",null,"_"),e("）或 Symbol 唯一标识符，其它类型将被自动地转化为字符串）。")],-1),d=t("h2",{id:"合并两个有序数组",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#合并两个有序数组","aria-hidden":"true"},"#"),e(" 合并两个有序数组")],-1),w=t("blockquote",null,[t("p",null,[e("真题描述：给你两个有序（从小到大）整数数组 "),t("code",null,"nums1"),e(" 和 "),t("code",null,"nums2"),e("，请你将 "),t("code",null,"nums2"),e(" 合并到 "),t("code",null,"nums1"),e(" 中，使 "),t("code",null,"nums1"),e(" 成为一个有序数组。 初始化 "),t("code",null,"nums1"),e(" 和 "),t("code",null,"nums2"),e(" 的元素数量分别为 "),t("code",null,"m"),e(" 和 "),t("code",null,"n"),e(" 。 你可以 "),t("strong",null,[e("假设 "),t("code",null,"nums1"),e(" 有足够的空间（空间大小大于或等于 "),t("code",null,"m + n"),e("）")]),e(" 来保存 "),t("code",null,"nums2"),e(" 中的元素。")]),t("p",null,[e("示例: 输入 "),t("code",null,"nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3"),e(" 输出 "),t("code",null,"[1,2,2,3,5,6]")])],-1),y=t("ul",null,[t("li",null,"解法一：先将数组合并再排序")],-1),g=t("div",{class:"language-javascript ext-js line-numbers-mode"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token keyword"},"function"),e(),t("span",{class:"token function"},"merge"),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},[e("nums1"),t("span",{class:"token punctuation"},","),e(" m"),t("span",{class:"token punctuation"},","),e(" nums2"),t("span",{class:"token punctuation"},","),e(" n")]),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n    nums1 "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"concat"),t("span",{class:"token punctuation"},"("),e("nums1"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"slice"),t("span",{class:"token punctuation"},"("),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},","),e("m"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),e(" nums2"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token keyword"},"return"),e(" nums1"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"sort"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n"),t("span",{class:"token punctuation"},"}"),e("\n")])]),t("div",{class:"line-numbers"},[t("span",{class:"line-number"},"1"),t("br"),t("span",{class:"line-number"},"2"),t("br"),t("span",{class:"line-number"},"3"),t("br"),t("span",{class:"line-number"},"4"),t("br")])],-1),f=t("ul",null,[t("li",null,[e("解法二：标准解法就是"),t("strong",null,"双指针法"),e("。首先我们定义两个指针，各指向两个数组"),t("strong",null,"生效部分的尾部")])],-1),h=t("p",null,[t("img",{src:"/blog-code/assets/20200814111859750_11809.9f5c0db6.png",alt:"双指针起始指向"})],-1),j=t("p",null,[e("然后每次只对指针分别所指的两个元素进行比较，取其中较大的元素，把它从 "),t("code",null,"nums1"),e(" 的末尾往前面填补")],-1),v=t("p",null,[t("img",{src:"/blog-code/assets/20200814112106004_14826.eaa3a263.png",alt:"填充数组 nums1"})],-1),x=t("p",null,[e("⚠️ 如果我们从前往后填补，就没法直接往对应的坑位赋值了（会产生值覆盖），从后往前填补是没有内容的坑，这样会省掉很多麻烦。此外由于 "),t("code",null,"nums1"),e(" 的有效部分和 "),t("code",null,"nums2"),e(" 并不一定是一样长的，需要考虑其中一个"),t("strong",null,"提前到头"),e("的这种情况，还得对 "),t("code",null,"nums1"),e(" 进行调整：")],-1),M=t("ul",null,[t("li",null,[e("如果提前遍历完的是 "),t("code",null,"nums1"),e(" 的有效部分，剩下的是 "),t("code",null,"nums2"),e("，这意味着 "),t("code",null,"nums1"),e(" 的「头部」空出来了，直接把 "),t("code",null,"nums2"),e(" 整个补到 "),t("code",null,"nums1"),e(" 前面去即可。")]),t("li",null,[e("如果提前遍历完的是 "),t("code",null,"nums2"),e("，剩下的是 "),t("code",null,"nums1"),e("。由于容器本身就是 "),t("code",null,"nums1"),e("，所以此时不必做任何额外的操作。")])],-1),S=t("div",{class:"language-javascript ext-js line-numbers-mode"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token doc-comment comment"},[e("/**\n * "),t("span",{class:"token keyword"},"@param"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"}")]),e(),t("span",{class:"token parameter"},"nums1"),e("\n * "),t("span",{class:"token keyword"},"@param"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"}")]),e(),t("span",{class:"token parameter"},"m"),e("\n * "),t("span",{class:"token keyword"},"@param"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"}")]),e(),t("span",{class:"token parameter"},"nums2"),e("\n * "),t("span",{class:"token keyword"},"@param"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"}")]),e(),t("span",{class:"token parameter"},"n"),e("\n * "),t("span",{class:"token keyword"},"@return"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),t("span",{class:"token keyword"},"void"),t("span",{class:"token punctuation"},"}")]),e(" Do not return anything, modify nums1 in -place instead.\n */")]),e("\n\n"),t("span",{class:"token keyword"},"function"),e(),t("span",{class:"token function"},"merge"),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},[e("num1"),t("span",{class:"token punctuation"},","),e(" m"),t("span",{class:"token punctuation"},","),e(" num2"),t("span",{class:"token punctuation"},","),e(" n")]),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n  "),t("span",{class:"token comment"},"// 初始化两个指针的指向"),e("\n  "),t("span",{class:"token keyword"},"let"),e(" i "),t("span",{class:"token operator"},"="),e(" m "),t("span",{class:"token operator"},"-"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},","),e("\n    j "),t("span",{class:"token operator"},"="),e(" n "),t("span",{class:"token operator"},"-"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),e("\n  "),t("span",{class:"token comment"},"// 初始化 nums1 尾部索引"),e("\n  "),t("span",{class:"token keyword"},"let"),e(" k "),t("span",{class:"token operator"},"="),e(" m "),t("span",{class:"token operator"},"+"),e(" n "),t("span",{class:"token operator"},"-"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),e("\n\n  "),t("span",{class:"token comment"},"// 当两个数组都没有遍历完时继续迭代"),e("\n  "),t("span",{class:"token keyword"},"while"),e(),t("span",{class:"token punctuation"},"("),e("i "),t("span",{class:"token operator"},">="),e(),t("span",{class:"token number"},"0"),e(),t("span",{class:"token operator"},"&&"),e(" j "),t("span",{class:"token operator"},">="),e(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token keyword"},"if"),e(),t("span",{class:"token punctuation"},"("),e("num1"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},">="),e(" num2"),t("span",{class:"token punctuation"},"["),e("j"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n      num1"),t("span",{class:"token punctuation"},"["),e("k"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"="),e(" num1"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),e("\n      i"),t("span",{class:"token operator"},"--"),t("span",{class:"token punctuation"},";"),e("\n      k"),t("span",{class:"token operator"},"--"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token punctuation"},"}"),e(),t("span",{class:"token keyword"},"else"),e(),t("span",{class:"token punctuation"},"{"),e("\n      num1"),t("span",{class:"token punctuation"},"["),e("k"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"="),e(" num2"),t("span",{class:"token punctuation"},"["),e("j"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),e("\n      j"),t("span",{class:"token operator"},"--"),t("span",{class:"token punctuation"},";"),e("\n      k"),t("span",{class:"token operator"},"--"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token punctuation"},"}"),e("\n  "),t("span",{class:"token punctuation"},"}"),e("\n\n  "),t("span",{class:"token comment"},"// 当遍历完 nums1 但 nums2 未遍历完的情况"),e("\n  "),t("span",{class:"token comment"},"// 需要将剩余的 nums2 元素继续添加到 nums1 中"),e("\n  "),t("span",{class:"token keyword"},"while"),t("span",{class:"token punctuation"},"("),e("j"),t("span",{class:"token operator"},">="),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n    num1"),t("span",{class:"token punctuation"},"["),e("k"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"="),e(" num2"),t("span",{class:"token punctuation"},"["),e("j"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),e("\n    j"),t("span",{class:"token operator"},"--"),t("span",{class:"token punctuation"},";"),e("\n    k"),t("span",{class:"token operator"},"--"),t("span",{class:"token punctuation"},";"),e("\n  "),t("span",{class:"token punctuation"},"}"),e("\n  console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),e("nums1"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n"),t("span",{class:"token punctuation"},"}"),e("\n")])]),t("div",{class:"line-numbers"},[t("span",{class:"line-number"},"1"),t("br"),t("span",{class:"line-number"},"2"),t("br"),t("span",{class:"line-number"},"3"),t("br"),t("span",{class:"line-number"},"4"),t("br"),t("span",{class:"line-number"},"5"),t("br"),t("span",{class:"line-number"},"6"),t("br"),t("span",{class:"line-number"},"7"),t("br"),t("span",{class:"line-number"},"8"),t("br"),t("span",{class:"line-number"},"9"),t("br"),t("span",{class:"line-number"},"10"),t("br"),t("span",{class:"line-number"},"11"),t("br"),t("span",{class:"line-number"},"12"),t("br"),t("span",{class:"line-number"},"13"),t("br"),t("span",{class:"line-number"},"14"),t("br"),t("span",{class:"line-number"},"15"),t("br"),t("span",{class:"line-number"},"16"),t("br"),t("span",{class:"line-number"},"17"),t("br"),t("span",{class:"line-number"},"18"),t("br"),t("span",{class:"line-number"},"19"),t("br"),t("span",{class:"line-number"},"20"),t("br"),t("span",{class:"line-number"},"21"),t("br"),t("span",{class:"line-number"},"22"),t("br"),t("span",{class:"line-number"},"23"),t("br"),t("span",{class:"line-number"},"24"),t("br"),t("span",{class:"line-number"},"25"),t("br"),t("span",{class:"line-number"},"26"),t("br"),t("span",{class:"line-number"},"27"),t("br"),t("span",{class:"line-number"},"28"),t("br"),t("span",{class:"line-number"},"29"),t("br"),t("span",{class:"line-number"},"30"),t("br"),t("span",{class:"line-number"},"31"),t("br"),t("span",{class:"line-number"},"32"),t("br"),t("span",{class:"line-number"},"33"),t("br"),t("span",{class:"line-number"},"34"),t("br"),t("span",{class:"line-number"},"35"),t("br"),t("span",{class:"line-number"},"36"),t("br"),t("span",{class:"line-number"},"37"),t("br")])],-1),_=t("h2",{id:"三数求和问题",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#三数求和问题","aria-hidden":"true"},"#"),e(" 三数求和问题")],-1),q=t("blockquote",null,[t("p",null,[e("真题描述：给你一个包含 "),t("code",null,"n"),e(" 个整数的数组 "),t("code",null,"nums"),e("，判断 "),t("code",null,"nums"),e(" 中是否存在三个元素 "),t("code",null,"a"),e("，"),t("code",null,"b"),e("，"),t("code",null,"c"),e(" ，使得 "),t("code",null,"a + b + c = 0"),e(" ？请你找出所有满足条件且不重复的三元组。💡 答案中不可以包含重复的三元组。")]),t("p",null,[e("示例： 给定数组 "),t("code",null,"nums = [-1, 0, 1, 2, -1, -4]"),e("， 满足要求的三元组集合为： "),t("code",null,"[ [-1, 0, 1], [-1, -1, 2] ]")])],-1),D=t("p",null,"一般思路是需要三层循环遍才能解决，不过现在使用双指针法定位效率将会被大大提升而避免过过度的循环。",-1),E=t("p",null,[e("💡 "),t("strong",null,"双指针法"),e("的使用场景涉及求和、比大小类的数组题目，一方面可以做到空间换时间；另一方面也可以帮我们降低问题的复杂度。双指针法大前提往往是："),t("strong",null,"该数组必须有序"),e("，否则双指针根本无法帮助我们缩小定位的范围。")],-1),F=t("p",null,"所以第一步是对数组进行排序（从小到大），然后固定其中一个数，用双指针分别从一头一尾遍历其后的数，直至「对撞指针」。",-1),O=t("p",null,[t("img",{src:"/blog-code/assets/20200814145134042_26333.b38a4c68.png",alt:"三数求和"})],-1),$=t("p",null,"每次指针移动一次位置，就计算一下两个指针指向数字之和加上固定的那个数是否等于0。如果是就得到了一个目标组合；否则分两种情况来看：",-1),z=t("ul",null,[t("li",null,"相加之和大于0，说明右侧的数偏大了，右指针左移"),t("li",null,"相加之和小于0，说明左侧的数偏小了，左指针右移")],-1),A=t("p",null,"⚠️ 由于不能出现重复的三元组，还需要在遍历是分别判断指针移动前后的元素是否相同",-1),B=t("div",{class:"language-javascript ext-js line-numbers-mode"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token doc-comment comment"},[e("/**\n * "),t("span",{class:"token keyword"},"@param"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"}")]),e(),t("span",{class:"token parameter"},"nums"),e("\n * "),t("span",{class:"token keyword"},"@return"),e(),t("span",{class:"token class-name"},[t("span",{class:"token punctuation"},"{"),e("number"),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"}")]),e("\n */")]),e("\n\n"),t("span",{class:"token keyword"},"function"),e(),t("span",{class:"token function"},"threeSum"),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},"nums"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n  "),t("span",{class:"token comment"},"// 存放符合条件的三元数组"),e("\n  "),t("span",{class:"token keyword"},"let"),e(" res "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token punctuation"},"["),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},";"),e("\n  "),t("span",{class:"token comment"},"// 先对原始数组进行排序"),e("\n  nums "),t("span",{class:"token operator"},"="),e(" nums"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"sort"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},[e("a"),t("span",{class:"token punctuation"},","),e(" b")]),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token operator"},"=>"),e(),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token keyword"},"return"),e(" a "),t("span",{class:"token operator"},"-"),e(" b"),t("span",{class:"token punctuation"},";"),e("\n  "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n\n  "),t("span",{class:"token keyword"},"const"),e(" len "),t("span",{class:"token operator"},"="),e(" nums"),t("span",{class:"token punctuation"},"."),e("length"),t("span",{class:"token punctuation"},";"),e("\n\n  "),t("span",{class:"token comment"},"// 由于三数求和，因此只需要将固定数字遍历到倒数第三个数就足够了，因为左右指针会遍历后面两个数"),e("\n  "),t("span",{class:"token keyword"},"for"),e(),t("span",{class:"token punctuation"},"("),t("span",{class:"token keyword"},"let"),e(" i "),t("span",{class:"token operator"},"="),e(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},";"),e(" i "),t("span",{class:"token operator"},"<"),e(" len "),t("span",{class:"token operator"},"-"),e(),t("span",{class:"token number"},"2"),t("span",{class:"token punctuation"},";"),e(" i"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n    "),t("span",{class:"token comment"},"// 初始化左指针 l 的位置"),e("\n    "),t("span",{class:"token keyword"},"let"),e(" l "),t("span",{class:"token operator"},"="),e(" i "),t("span",{class:"token operator"},"+"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token comment"},"// 初始化右指针 r 的位置"),e("\n    "),t("span",{class:"token keyword"},"let"),e(" r "),t("span",{class:"token operator"},"="),e(" len "),t("span",{class:"token operator"},"-"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},";"),e("\n\n    "),t("span",{class:"token comment"},"// 遍历过程中，如果需要固定的数字与前一个数字相同就跳过，因为会产生相同的结果"),e("\n    "),t("span",{class:"token comment"},"// 限制 i>0 是从第二项开始验证"),e("\n    "),t("span",{class:"token keyword"},"if"),e(),t("span",{class:"token punctuation"},"("),e("i "),t("span",{class:"token operator"},">"),e(),t("span",{class:"token number"},"0"),e(),t("span",{class:"token operator"},"&&"),e(" nums"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"==="),e(" nums"),t("span",{class:"token punctuation"},"["),e("i "),t("span",{class:"token operator"},"-"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n      "),t("span",{class:"token keyword"},"continue"),t("span",{class:"token punctuation"},";"),e("\n    "),t("span",{class:"token punctuation"},"}"),e("\n\n    "),t("span",{class:"token comment"},"// 移动指针判断三数和直至「撞针」"),e("\n    "),t("span",{class:"token keyword"},"while"),e(),t("span",{class:"token punctuation"},"("),e("l "),t("span",{class:"token operator"},"<"),e(" r"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n      "),t("span",{class:"token comment"},"// 三数之和小于 0，左指针前进"),e("\n      "),t("span",{class:"token keyword"},"if"),e(),t("span",{class:"token punctuation"},"("),e("nums"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"+"),e(" nums"),t("span",{class:"token punctuation"},"["),e("l"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"+"),e(" nums"),t("span",{class:"token punctuation"},"["),e("r"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"<"),e(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n        l"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},";"),e("\n        "),t("span",{class:"token comment"},"// 判断左指针移动后指向的元素是否与之前指向的元素是否相同，如果相同继续移动一步"),e("\n        "),t("span",{class:"token keyword"},"while"),e(),t("span",{class:"token punctuation"},"("),e("l "),t("span",{class:"token operator"},"<"),e(" r "),t("span",{class:"token operator"},"&&"),e(" nums"),t("span",{class:"token punctuation"},"["),e("l"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"==="),e(" nums"),t("span",{class:"token punctuation"},"["),e("l "),t("span",{class:"token operator"},"-"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n          l"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},";"),e("\n        "),t("span",{class:"token punctuation"},"}"),e("\n      "),t("span",{class:"token punctuation"},"}"),e(),t("span",{class:"token keyword"},"else"),e(),t("span",{class:"token keyword"},"if"),e(),t("span",{class:"token punctuation"},"("),e("nums"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"+"),e(" nums"),t("span",{class:"token punctuation"},"["),e("l"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"+"),e(" nums"),t("span",{class:"token punctuation"},"["),e("r"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},">"),e(),t("span",{class:"token number"},"0"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n        r"),t("span",{class:"token operator"},"--"),t("span",{class:"token punctuation"},";"),e("\n        "),t("span",{class:"token comment"},"// 判断右指针移动后指向的元素是否与之前指向的元素是否相同，如果相同继续移动一步"),e("\n        "),t("span",{class:"token keyword"},"while"),e(),t("span",{class:"token punctuation"},"("),e("l "),t("span",{class:"token operator"},"<"),e(" r "),t("span",{class:"token operator"},"&&"),e(" nums"),t("span",{class:"token punctuation"},"["),e("r"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"==="),e(" nums"),t("span",{class:"token punctuation"},"["),e("r "),t("span",{class:"token operator"},"+"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n          r"),t("span",{class:"token operator"},"--"),t("span",{class:"token punctuation"},";"),e("\n        "),t("span",{class:"token punctuation"},"}"),e("\n      "),t("span",{class:"token punctuation"},"}"),e(),t("span",{class:"token keyword"},"else"),e(),t("span",{class:"token punctuation"},"{"),e("\n        "),t("span",{class:"token comment"},"// 满足条件就添加到 res 中"),e("\n        res"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"push"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"["),e("nums"),t("span",{class:"token punctuation"},"["),e("i"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},","),e(" nums"),t("span",{class:"token punctuation"},"["),e("l"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},","),e(" nums"),t("span",{class:"token punctuation"},"["),e("r"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),e("\n        "),t("span",{class:"token comment"},"// 左右指针逼近一步，继续遍历中间余下的元素"),e("\n        l"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},";"),e("\n        r"),t("span",{class:"token operator"},"--"),t("span",{class:"token punctuation"},";"),e("\n        "),t("span",{class:"token comment"},"// 还需先判断移动后两个指针分别指向的元素与之前元素是否相同"),e("\n        "),t("span",{class:"token keyword"},"while"),e(),t("span",{class:"token punctuation"},"("),e("l "),t("span",{class:"token operator"},"<"),e(" r "),t("span",{class:"token operator"},"&&"),e(" nums"),t("span",{class:"token punctuation"},"["),e("l"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"==="),e(" nums"),t("span",{class:"token punctuation"},"["),e("l "),t("span",{class:"token operator"},"-"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n          l"),t("span",{class:"token operator"},"++"),t("span",{class:"token punctuation"},";"),e("\n        "),t("span",{class:"token punctuation"},"}"),e("\n        "),t("span",{class:"token keyword"},"while"),e(),t("span",{class:"token punctuation"},"("),e("l "),t("span",{class:"token operator"},"<"),e(" r "),t("span",{class:"token operator"},"&&"),e(" nums"),t("span",{class:"token punctuation"},"["),e("r"),t("span",{class:"token punctuation"},"]"),e(),t("span",{class:"token operator"},"==="),e(" nums"),t("span",{class:"token punctuation"},"["),e("r "),t("span",{class:"token operator"},"+"),e(),t("span",{class:"token number"},"1"),t("span",{class:"token punctuation"},"]"),t("span",{class:"token punctuation"},")"),e(),t("span",{class:"token punctuation"},"{"),e("\n          r"),t("span",{class:"token operator"},"--"),t("span",{class:"token punctuation"},";"),e("\n        "),t("span",{class:"token punctuation"},"}"),e("\n      "),t("span",{class:"token punctuation"},"}"),e("\n    "),t("span",{class:"token punctuation"},"}"),e("\n  "),t("span",{class:"token punctuation"},"}"),e("\n\n  "),t("span",{class:"token comment"},"// 返回结果数组"),e("\n  "),t("span",{class:"token keyword"},"return"),e(" res"),t("span",{class:"token punctuation"},";"),e("\n"),t("span",{class:"token punctuation"},"}"),e("\n")])]),t("div",{class:"line-numbers"},[t("span",{class:"line-number"},"1"),t("br"),t("span",{class:"line-number"},"2"),t("br"),t("span",{class:"line-number"},"3"),t("br"),t("span",{class:"line-number"},"4"),t("br"),t("span",{class:"line-number"},"5"),t("br"),t("span",{class:"line-number"},"6"),t("br"),t("span",{class:"line-number"},"7"),t("br"),t("span",{class:"line-number"},"8"),t("br"),t("span",{class:"line-number"},"9"),t("br"),t("span",{class:"line-number"},"10"),t("br"),t("span",{class:"line-number"},"11"),t("br"),t("span",{class:"line-number"},"12"),t("br"),t("span",{class:"line-number"},"13"),t("br"),t("span",{class:"line-number"},"14"),t("br"),t("span",{class:"line-number"},"15"),t("br"),t("span",{class:"line-number"},"16"),t("br"),t("span",{class:"line-number"},"17"),t("br"),t("span",{class:"line-number"},"18"),t("br"),t("span",{class:"line-number"},"19"),t("br"),t("span",{class:"line-number"},"20"),t("br"),t("span",{class:"line-number"},"21"),t("br"),t("span",{class:"line-number"},"22"),t("br"),t("span",{class:"line-number"},"23"),t("br"),t("span",{class:"line-number"},"24"),t("br"),t("span",{class:"line-number"},"25"),t("br"),t("span",{class:"line-number"},"26"),t("br"),t("span",{class:"line-number"},"27"),t("br"),t("span",{class:"line-number"},"28"),t("br"),t("span",{class:"line-number"},"29"),t("br"),t("span",{class:"line-number"},"30"),t("br"),t("span",{class:"line-number"},"31"),t("br"),t("span",{class:"line-number"},"32"),t("br"),t("span",{class:"line-number"},"33"),t("br"),t("span",{class:"line-number"},"34"),t("br"),t("span",{class:"line-number"},"35"),t("br"),t("span",{class:"line-number"},"36"),t("br"),t("span",{class:"line-number"},"37"),t("br"),t("span",{class:"line-number"},"38"),t("br"),t("span",{class:"line-number"},"39"),t("br"),t("span",{class:"line-number"},"40"),t("br"),t("span",{class:"line-number"},"41"),t("br"),t("span",{class:"line-number"},"42"),t("br"),t("span",{class:"line-number"},"43"),t("br"),t("span",{class:"line-number"},"44"),t("br"),t("span",{class:"line-number"},"45"),t("br"),t("span",{class:"line-number"},"46"),t("br"),t("span",{class:"line-number"},"47"),t("br"),t("span",{class:"line-number"},"48"),t("br"),t("span",{class:"line-number"},"49"),t("br"),t("span",{class:"line-number"},"50"),t("br"),t("span",{class:"line-number"},"51"),t("br"),t("span",{class:"line-number"},"52"),t("br"),t("span",{class:"line-number"},"53"),t("br"),t("span",{class:"line-number"},"54"),t("br"),t("span",{class:"line-number"},"55"),t("br"),t("span",{class:"line-number"},"56"),t("br"),t("span",{class:"line-number"},"57"),t("br"),t("span",{class:"line-number"},"58"),t("br"),t("span",{class:"line-number"},"59"),t("br"),t("span",{class:"line-number"},"60"),t("br"),t("span",{class:"line-number"},"61"),t("br"),t("span",{class:"line-number"},"62"),t("br"),t("span",{class:"line-number"},"63"),t("br")])],-1),C=t("p",null,[e("💡 "),t("strong",null,"左右指针一起从两边往中间位置相互迫近，这样的特殊双指针形态，被称为「对撞指针」"),e("。当遇到有序的数组相关题目，通双指针走不通就可以考虑使用「对撞指针」方法，对撞指针可以帮助我们缩小问题的范围。因为数组有序，所以我们可以用两个指针「画地为牢」圈出一个范围，这个范围以外的值不是太大就是太小、直接被排除在我们的判断逻辑之外，这样我们就可以把时间花在真正有意义的计算和对比上。如此一来，不仅节省了计算的时间，更降低了问题本身的复杂度，我们做题的速度也会大大加快。")],-1);o.render=function(t,e){return n(),s(a,null,[c,p,l,u,r,k,i,m,b,d,w,y,g,f,h,j,v,x,M,S,_,q,D,E,F,O,$,z,A,B,C],64)};export default o;
